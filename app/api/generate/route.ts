import { NextRequest, NextResponse } from 'next/server'

export async function POST(req: NextRequest) {
  try {
    const { templateId, slides } = await req.json()

    // In production, this would:
    // 1. Call Python backend to generate PowerPoint
    // 2. Wait for file to be created
    // 3. Return the file as a blob

    const pythonApiUrl = process.env.PYTHON_API_URL
    if (pythonApiUrl) {
      try {
        const response = await fetch(`${pythonApiUrl}/generate`, {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ templateId, slides })
        })

        if (response.ok) {
          const blob = await response.blob()
          return new NextResponse(blob, {
            headers: {
              'Content-Type': 'application/vnd.openxmlformats-officedocument.presentationml.presentation',
              'Content-Disposition': 'attachment; filename="presentation.pptx"'
            }
          })
        }
      } catch (error) {
        console.error('Error calling Python backend:', error)
      }
    }

    // Mock response for demo
    // Return a simple text file as placeholder
    const mockContent = 'This is a placeholder. In production, this would be a real PowerPoint file generated by the Python backend.'
    
    return new NextResponse(mockContent, {
      headers: {
        'Content-Type': 'text/plain',
        'Content-Disposition': 'attachment; filename="presentation-placeholder.txt"'
      }
    })
  } catch (error) {
    console.error('Generate error:', error)
    return NextResponse.json(
      { error: 'Generation failed' }, 
      { status: 500 }
    )
  }
}

